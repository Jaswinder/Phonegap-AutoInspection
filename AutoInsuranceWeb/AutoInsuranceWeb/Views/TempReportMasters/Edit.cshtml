@model AutoInsuranceWeb.Models.ReportMasterPreview

@{
    ViewBag.Title = "Edit";
}

 <!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Edit
        <small>Control panel</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Dashboard</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-6">
         
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <br />
            if(ViewBag.Message != null)
            {
            <div class="box">
                <div class="box-body" id="textMessage">
                    @ViewBag.Message

                </div>
            </div>
            }
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ReportID)
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.StartDate)
                @Html.HiddenFor(model => model.FinishDate)
                @Html.HiddenFor(model => model.Longitude)
                @Html.HiddenFor(model => model.Latitude)
                @Html.HiddenFor(model => model.ClientLocation)

                <div class="form-group">
                    @Html.LabelFor(model => model.ReportNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReportNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReportNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.Status, ViewBag.Status as SelectList, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.IsLocked, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsLocked)
                            @Html.ValidationMessageFor(model => model.IsLocked, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.VehicleCategoryID, ViewBag.VehicleCategories as SelectList, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleCategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ChassisNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ChassisNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ChassisNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BookNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BookNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BookNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       @Html.DropDownListFor(m => m.CompanyID, ViewBag.CompanyMaster as SelectList, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>*@



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" id="btnSave" class="btn btn-primary" />
                    </div>

                </div>
            </div>
        }
            <div class="col-md-offset-2 col-md-10">
                <h5>Please save your changes before approve.</h5>
                <a href="@Url.Content("/TempReportMasters/Approve/"+Model.ReportID)" class="btn btn-info">Approve Report</a>
            </div>
            <div class="row">
                <table class="table" id="Attributes">

                    @foreach (var item in (List<AutoInsuranceWeb.Models.ReportAttribute>)ViewBag.ReportAttr)
                    {
                        <tr>
                            <td>
                                <b>
                                    @item.ReportAttributeName
                                </b>
                            </td>
                            <td>
                                @if (item.ReportAttributeDataType == "COMBO")
                                {
                                <select class="attributeSelect" data-AttributeID="@item.ReportAttributeID" data-AttributeName="@item.ReportAttributeName" data-selectedValue="@item.ReportAttributeDefaultValue">
                                    <option value="-">Select</option>
                                    <option value="Safe">Safe</option>
                                    <option value="Crack">Crack</option>
                                    <option value="Scratch">Scratch</option>
                                    <option value="Dented">Dented</option>
                                    <option value="Minor Dent">Minor Dent</option>
                                    <option value="Major Dent">Major Dent</option>
                                    <option value="Broken">Broken</option>
                                    <option value="Not Fitted">Not Fitted</option>
                                    <option value="NA">NA</option>
                                </select>
                                }else if(item.ReportAttributeDataType == "TEXT")
                                {
                                    <input type="text" class="attributeText" data-AttributeID="@item.ReportAttributeID" data-AttributeName="@item.ReportAttributeName" value="@item.ReportAttributeDefaultValue" />
                                }
                            </td>
                        </tr>
                    }

                </table>

            </div>

            </div>
        <div class="col-md-6">
            @foreach (var images in ViewBag.ReportImages)
            {
                <img src="http://autoinsurance.flashcontacts.org/@images.ImagePathStemped" class="img img-responsive" />
                <h3>@images.ImageType</h3>
            }
            @foreach (var videos in ViewBag.ReportVideos)
            {
                @*<video style="width:100%" controls>
                    <source src="http://autoinsurance.flashcontacts.org/@videos.VideoPath" type="video/mp4">
                </video>

                <object id="MediaPlayer1" width=300 height=291 classid="CLSID:22D6F312-B0F6-11D0-94AB-0080C74C7E95" codebase="http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52,701" standby="Loading Microsoft Windows Media Player components..." type="application/x-oleobject">
            <param name="FileName" value="http://autoinsurance.flashcontacts.org/@videos.VideoPath"><param name="ShowStatusBar" value="true">
            <param name="autoStart" value="False"><param name="DefaultFrame" value="mainFrame">
            <embed type="application/x-mplayer2" pluginspage="http://www.microsoft.com/Windows/MediaPlayer/" src="http://autoinsurance.flashcontacts.org/@videos.VideoPath" align="middle" width=300 height=291 autostart=1 defaultframe="rightFrame" showstatusbar=false></embed>
                </object>*@
            }

        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    </section>
@section scripts {
    <script>
        $(document).ready(function () {
            $("#VehicleCategoryID").change(function () {
                $("#btnSave").click();
            });
            $('.attributeSelect').change(function () {
                var AttributeID = $(this).attr("data-AttributeID");
                var AttributeName = $(this).val();
                var ReportID = $("#ReportID").val();
               $.ajax({
                    url: "/TempReportMasters/SaveAttributeValue",
                    type: "POST",
                    data: { reportId: ReportID, attributeId: AttributeID, attributeValue: AttributeName },
                    success: function (data) {
                       
                    }
                });
            });
            $('.attributeText').change(function () {
                var AttributeID = $(this).attr("data-AttributeID");
                var AttributeName = $(this).val();
                var ReportID = $("#ReportID").val();
                $.ajax({
                    url: "/TempReportMasters/SaveAttributeValue",
                    type: "POST",
                    data: { reportId: ReportID, attributeId: AttributeID, attributeValue: AttributeName },
                    success: function (data) {

                    }
                });
            });

            $('.attributeSelect').each(function () {
                var AttributeID = $(this).attr("data-selectedValue");
                if (AttributeID != "") {
                    $(this).val(AttributeID);
                }
            });
    });
    </script>
}
